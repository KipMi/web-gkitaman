
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.4.2
 * Query Engine version: ac9d7041ed77bcc8a8dbd2ab6616b39013829574
 */
Prisma.prismaVersion = {
  client: "5.4.2",
  engine: "ac9d7041ed77bcc8a8dbd2ab6616b39013829574"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RenunganScalarFieldEnum = {
  id: 'id',
  title: 'title',
  kitab: 'kitab',
  ayat: 'ayat',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JemaatScalarFieldEnum = {
  id: 'id',
  noAnggota: 'noAnggota',
  namaDepan: 'namaDepan',
  namaTengah: 'namaTengah',
  namaKeluarga: 'namaKeluarga',
  noWA: 'noWA',
  noTelpRumah: 'noTelpRumah',
  tempatLahir: 'tempatLahir',
  ayahId: 'ayahId',
  ibuId: 'ibuId',
  tanggalLahir: 'tanggalLahir',
  golonganDarah: 'golonganDarah',
  alamatRumah: 'alamatRumah',
  wilayah: 'wilayah',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IbadahScalarFieldEnum = {
  id: 'id',
  category: 'category',
  temaIbadah: 'temaIbadah',
  pemimpin: 'pemimpin',
  linkVideo: 'linkVideo',
  infoTambahan: 'infoTambahan',
  waktuMulai: 'waktuMulai',
  waktuSelesai: 'waktuSelesai',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DoaScalarFieldEnum = {
  id: 'id',
  category: 'category',
  tema: 'tema',
  pemimpin: 'pemimpin',
  infoTambahan: 'infoTambahan',
  waktuMulai: 'waktuMulai',
  waktuSelesai: 'waktuSelesai',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LayananBaptisScalarFieldEnum = {
  id: 'id',
  category: 'category',
  infoPendaftaran: 'infoPendaftaran',
  jadwal: 'jadwal',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LayananPernikahanScalarFieldEnum = {
  id: 'id',
  category: 'category',
  infoPendaftaran: 'infoPendaftaran',
  jadwal: 'jadwal',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KonselingPendetaScalarFieldEnum = {
  id: 'id',
  info: 'info',
  jadwal: 'jadwal',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrangTuaScalarFieldEnum = {
  id: 'id',
  noAnggota: 'noAnggota',
  namaDepan: 'namaDepan',
  namaTengah: 'namaTengah',
  namaKeluarga: 'namaKeluarga',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KegiatanScalarFieldEnum = {
  id: 'id',
  komisi: 'komisi',
  judulKegiatan: 'judulKegiatan',
  deskripsiKegiatan: 'deskripsiKegiatan',
  imageURL: 'imageURL',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KaryawanScalarFieldEnum = {
  id: 'id',
  namaDepan: 'namaDepan',
  namaTengah: 'namaTengah',
  status: 'status',
  namaKeluarga: 'namaKeluarga',
  imageURL: 'imageURL',
  posisi: 'posisi',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PendetaScalarFieldEnum = {
  id: 'id',
  namaDepan: 'namaDepan',
  namaTengah: 'namaTengah',
  status: 'status',
  namaKeluarga: 'namaKeluarga',
  imageURL: 'imageURL',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.userRole = exports.$Enums.userRole = {
  SUPERADMIN: 'SUPERADMIN',
  ADMIN: 'ADMIN',
  KOMISIANAK: 'KOMISIANAK',
  KOMISIREMAJA: 'KOMISIREMAJA',
  KOMISIPEMUDA: 'KOMISIPEMUDA',
  KOMISIDEWASA: 'KOMISIDEWASA',
  KOMISILANSIA: 'KOMISILANSIA',
  KOMISIKESENIAN: 'KOMISIKESENIAN',
  KOMISIMULTIMEDIA: 'KOMISIMULTIMEDIA'
};

exports.CategoryPernikahan = exports.$Enums.CategoryPernikahan = {
  Katekisasi: 'Katekisasi',
  Konseling: 'Konseling',
  Pemberkatan: 'Pemberkatan'
};

exports.posisiKaryawan = exports.$Enums.posisiKaryawan = {
  PENDETA: 'PENDETA',
  STAFFKANTOR: 'STAFFKANTOR',
  KOMISI: 'KOMISI'
};

exports.status = exports.$Enums.status = {
  AKTIF: 'AKTIF',
  TIDAKAKTIF: 'TIDAKAKTIF'
};

exports.Prisma.ModelName = {
  User: 'User',
  Renungan: 'Renungan',
  Jemaat: 'Jemaat',
  Ibadah: 'Ibadah',
  Doa: 'Doa',
  LayananBaptis: 'LayananBaptis',
  LayananPernikahan: 'LayananPernikahan',
  KonselingPendeta: 'KonselingPendeta',
  OrangTua: 'OrangTua',
  Kegiatan: 'Kegiatan',
  Karyawan: 'Karyawan',
  Pendeta: 'Pendeta'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
